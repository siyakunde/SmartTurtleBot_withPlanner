<!-- This file can be used to launch an office world with a turtlebot in it -->
<launch>

	<!-- Arguments and parameters from turtlebot_world.launch -->
	<arg name="world_file"  default="$(find system1)/worlds/empty.world"/>

	<arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
	<arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
	<arg name="gui" default="true"/>
	<arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
	<arg name="3d_sensor" default="$(optenv TURTLEBOT_3D_SENSOR asus_xtion_pro)"/>  <!-- kinect, asus_xtion_pro --> 

	<!-- Custom launch arguments and parameters -->
	<arg name="totalDistance" default="50.55"/>
	<param name="totalDistance" type="double" value="$(arg totalDistance)"/>
	<arg name="initial_x" default="2.5"/>
	<arg name="initial_y" default="3.5"/>
	<arg name="initial_a" default="0.0"/>

	<!-- Code from turtlebot_world.launch -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="use_sim_time" value="true"/>
		<arg name="debug" value="false"/>
		<arg name="gui" value="$(arg gui)" />
		<arg name="world_name" value="$(arg world_file)"/>
	</include>

	<include file="$(find system1)/launch/includes/$(arg base).launch.xml">
		<arg name="base" value="$(arg base)"/>
		<arg name="stacks" value="$(arg stacks)"/>
		<arg name="3d_sensor" value="$(arg 3d_sensor)"/>
		<arg name="initial_pose_x" value="$(arg initial_x)"/>
		<arg name="initial_pose_y" value="$(arg initial_y)"/>
		<arg name="initial_pose_a" value="$(arg initial_a)"/>
	</include>	

	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="30.0" />
	</node>

	<node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
		<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
		<param name="scan_height" value="10"/>
		<param name="output_frame_id" value="/camera_depth_frame"/>
		<param name="range_min" value="0.45"/>
		<remap from="image" to="/camera/depth/image_raw"/>
		<remap from="scan" to="/scan"/>
	</node>
</launch>