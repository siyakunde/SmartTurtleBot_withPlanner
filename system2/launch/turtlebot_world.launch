<!-- This file can be used to launch an playground world with a turtlebot in it -->
<launch>
	<arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->

	<arg name="world_file" default="$(find turtlebot_gazebo)/worlds/empty.world"/>
	<arg name="map_file" default="$(find turtlebot_gazebo)/maps/playground.yaml"/>

	<arg name="robot_radius" default="0.3"/><!-- Originally found in costmap_common_params.yaml -->
	<arg name="xy_goal_tolerance" default="0.3"/><!-- Originally found in dwa_local_planner_params.yaml -->
	<arg name="oscillation_timeout" default="5.0"/><!-- Originally found in move_base_params.yaml -->
	<arg name="oscillation_distance" default="0.05"/><!-- Originally found in move_base_params.yaml -->

	<arg name="initial_x" default="0.0"/>
	<arg name="initial_y" default="0.0"/>
	<arg name="initial_a" default="0.0"/>

	<param name="initial_x" value="$(arg initial_x)" />
	<param name="initial_y" value="$(arg initial_y)" />
	<param name="initial_a" value="$(arg initial_a)" />

	<arg name="goal_x" default="-2.0"/>
	<arg name="goal_y" default="2.0"/>
	<arg name="goal_a" default="180"/>

	<param name="goal_x" value="$(arg goal_x)" />
	<param name="goal_y" value="$(arg goal_y)" />
	<param name="goal_a" value="$(arg goal_a)" />

	<!--  Launch turtle bot world -->
	<include file="$(find turtlebot_gazebo)/launch/turtlebot_world.launch"/>

	<!-- 3D sensor -->
	
	<!-- <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
		<arg name="rgb_processing" value="false" />
		<arg name="depth_registration" value="false" />
		<arg name="depth_processing" value="false" />
		<arg name="scan_topic" value="/scan" />
	</include> -->

	<!-- Map server -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

	<!-- AMCL -->
	<include file="$(find system2)/launch/includes/$(arg 3d_sensor)_amcl.launch.xml">
		<arg name="initial_pose_x" value="$(arg initial_x)"/>
		<arg name="initial_pose_y" value="$(arg initial_y)"/>
		<arg name="initial_pose_a" value="$(arg initial_a)"/>
	</include>

	<!-- Move base -->
	<include file="$(find system2)/launch/includes/move_base.launch.xml">
		<arg name="custom_param_file" value="$(find system2)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
	</include>
	<param name="/move_base/global_costmap/robot_radius" value="$(arg robot_radius)"/>
	<param name="/move_base/local_costmap/robot_radius" value="$(arg robot_radius)"/>
	<param name="/move_base/DWAPlannerROS/xy_goal_tolerance" value="$(arg xy_goal_tolerance)"/>
	<param name="/move_base/oscillation_timeout" value="$(arg oscillation_timeout)"/>
	<param name="/move_base/oscillation_distance" value="$(arg oscillation_distance)"/>

	<!-- Launch rviz -->
	<include file="$(find turtlebot_rviz_launchers)/launch/view_navigation.launch"/>

	<!-- Launch send goals node -->
	<node name="system2_node" pkg="system2" type="system2_node" output="screen"/>

</launch>


<!-- <launch>  
	<arg name="map_file" default="$(find turtlebot_gazebo)/maps/playground.yaml"/>

	<param name="initial_x" value="0" />
	<param name="initial_y" value="0" />
	<param name="initial_w" value="0" />

	<param name="goal_x" value="-2" />
	<param name="goal_y" value="3" />
	<param name="goal_w" value="180" />

	<param name="robot_size" value="0.4"/>
	<param name="map_resolution" value="0.05"/>

	<param name="/use_sim_time" value="true"/> -->

	<!--  Launch turtle bot world -->
	<!-- <include file="$(find turtlebot_gazebo)/launch/turtlebot_world.launch"/> -->

	<!-- Launch navigation stack with amcl -->
	<!-- <include file="$(find turtlebot_gazebo)/launch/amcl_demo.launch"/> -->

	<!-- Launch rviz -->
	<!-- <include file="$(find turtlebot_rviz_launchers)/launch/view_navigation.launch"/> -->

	<!-- Launch send goals node -->
	<!-- <node name="system2_node" pkg="system2" type="system2_node" output="screen"/>
</launch> -->